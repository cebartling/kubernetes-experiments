apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.microservice.name }}
  namespace: {{ .Values.microservice.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.microservice.namespace }}
    app.kubernetes.io/component: statefulset
    app.kubernetes.io/instance: {{ .Values.microservice.name }}
spec:
  serviceName: {{ .Values.microservice.name }}
  replicas: {{ .Values.microservice.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.microservice.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.microservice.name }}
    spec:
      containers:
        - name: {{ .Values.workload.containerName }}
          image: {{ .Values.workload.image }}
          ports:
            - containerPort: {{ .Values.workload.clientPort }}
              name: client
            - containerPort: {{ .Values.workload.gossipPort }}
              name: gossip
          command: [ "/conf/update-node.sh", "redis-server", "/conf/redis.conf" ]
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: conf
              mountPath: /conf
              readOnly: false
            - name: data
              mountPath: /data
              readOnly: false
      volumes:
        - name: conf
          configMap:
            name: {{ .Values.microservice.name }}
            defaultMode: 0755
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi